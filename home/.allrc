#export PATH=~/Programs/anaconda/bin:$PATH

alias open="gnome-open"
alias o="gnome-open"

alias emacs='emacsclient -c -a ""'
alias e='emacsclient -c -a "" -nw'

PYROOT=~/Programs/anaconda/bin
alias pylab="$PYROOT/ipython qtconsole"
alias pynote="$PYROOT/ipython notebook"
# --matplotlib inline: show graphics inline
# --script: store py along with ipy files

alias emacs='emacsclient -c -a ""'

#
# Timestamp
#
alias date-iso='date +"%FT%T%Z"' # time stamp. Use with -u for UTC time
alias today='date +"%F"' # date stamp
alias uts='date +%s' # unix time stamp

# Password generator
pwdgen() {
	local l=$1
    [ "$l" == "" ] && l=16
    tr -dc A-Za-z0-9_ < /dev/urandom | head -c ${l} | xargs
}


#
# APT
#
function apt-history(){
      case "$1" in
        install)
              cat /var/log/dpkg.log | grep 'install ' 
              ;;
        upgrade|remove)
              cat /var/log/dpkg.log | grep $1
              ;;
        rollback)
              cat /var/log/dpkg.log | grep upgrade | \
                  grep "$2" -A10000000 | \
                  grep "$3" -B10000000 | \
                  awk '{print $4"="$5}'
              ;;
        *)
              cat /var/log/dpkg.log
              ;;
      esac
}

function apt-tail(){
    cat /var/log/dpkg.log | grep 'install ' | tail -n $1
}

alias install="sudo apt-get install"

#
# Todo.txt
#

alias td="$HOME/git/todo.txt-cli/todo.sh -d $HOME/git/todo.txt-cli/todo.cfg"
alias etd="emacs -nw $HOME/Dropbox/todo/todo.txt"

#
# Antlr
#
export CLASSPATH=".:/usr/local/lib/antlr-4.2-complete.jar:$CLASSPATH"
alias antlr4='java -jar /usr/local/lib/antlr-4.4-complete.jar'
alias grun='java org.antlr.v4.runtime.misc.TestRig'


#
# scanner pdf handling
#

DOC_ROOT=/home/hartmann/Documents

function scan_collate {
    pdftk A="$1" B="$2" shuffle A Bend-1S output "$3"
}

alias scan_merge="pdfunite"

function scan_get {
    A=`newest ~/scanner/`
    B="$DOC_ROOT/`date +%F`_$1.pdf"
    mv "$A" "$B"
    echo "Moved $A to $B"
}

function archive {
    B="$DOC_ROOT/`date +%F`_$1"
    cp "$1" "$B"
    echo "Archived $1 to $B"
    ls -l "$B"
}

function stamp {
    mv "$1" "`date +%F`_$1"
}

#
# Safe filename handling
#
# Those have problems with ordering of command line arguments. "Path" must precede expressions.
#alias find0="find -print0"
#alias xargs0="xargs -0"